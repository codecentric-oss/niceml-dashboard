[tool.poetry]
name = "nicemldashboard"
version = "0.0.0"

description = ""
authors = ["Nils Uhrberg <nils.uhrberg@codecentric.de>","Jan-Lukas Richert <janlukas.richert@gmail.com>", "Ihsan Kisi <ihsan.kisi@codecentric.de>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
nicegui = "^1.4.19"
pyaml = "^23.12.0"
numpy = "^1.26.4"



[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
python-semantic-release = "^9.3.1"
black = "^24.3.0"
pytest = "^8.1.1"


[tool.ruff]
select = ["E","F","D100", "D101","D102", "D103","D105","D106","D107","PT","PL"]
fixable = ["E","F","D","PT","PL"]
exclude = ["./tests/**"]
line-length = 100


[tool.ruff.pylint]
max-args = 10

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
assets = []
commit_message = "Create new release information: {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
version_variables = [
    "nicemldashboard/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:tool.poetry.version",
]

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "github-actions <action@github.com>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
