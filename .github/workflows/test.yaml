name: üß™ tests

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  workflow_call:

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    name: üß™ Run pytests
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: üî® Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.7.1"

      - name: üßô Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --with dev --no-ansi

      - run: mkdir results && touch results/test-results-${{ matrix.python-version }}-${{ matrix.os }}-summary.md

      - name: üß™ Run tests
        uses: aiakide/pytest-summary@main
        with:
          extensions: pytest-cov
          options: --doctest-modules --cov-report term --cov-report xml:coverage-${{ matrix.python-version }}-${{ matrix.os }}.xml --cov=nicemldashboard
          paths: tests/**
          output: test-results-${{ matrix.python-version }}-${{ matrix.os }}-summary.md
          show: "fail, skip"

      - name: ‚¨ÜÔ∏è Upload pytest results
        uses: actions/upload-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: pytest-results-${{ matrix.python-version }}-${{ matrix.os }}
          path: |
            coverage-${{ matrix.python-version }}-${{ matrix.os }}.xml
            test-results-${{ matrix.python-version }}-${{ matrix.os }}-summary.md
            .test_report.xml
        if: ${{ always() }}

      - name: üñäÔ∏è Write job summary (Bash for Unix, PowerShell for Windows)
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "No summary available for Windows runners" >> $GITHUB_STEP_SUMMARY
          else
            cat test-results-${{ matrix.python-version }}-${{ matrix.os }}-summary.md >> $GITHUB_STEP_SUMMARY
          fi
        shell: bash
        if: runner.os != 'Windows'

      - name: üñäÔ∏è Write job summary (PowerShell for Windows)
        run: |
          if ($env:RUNNER_OS -eq 'Windows') {
            "No summary available for Windows runners" >> $env:GITHUB_STEP_SUMMARY
          } else {
            Get-Content "test-results-${{ matrix.python-version }}-${{ matrix.os }}-summary.md" >> $env:GITHUB_STEP_SUMMARY
          }
        shell: pwsh
        if: runner.os == 'Windows'

      - name: ‚úèÔ∏è Write test result as comment
        uses: MishaKav/pytest-coverage-comment@v1.1.51
        with:
          pytest-xml-coverage-path: coverage-${{ matrix.python-version }}-${{ matrix.os }}.xml
          title: Coverage Report
          badge-title: Code Coverage
          hide-badge: false
          hide-report: false
          create-new-comment: false
          hide-comment: false
          report-only-changed-files: true
          remove-link-from-badge: false
          junitxml-path: .test_report.xml
          junitxml-title: Pytest summary
          github-token: ${{ secrets.GITHUB_TOKEN }}
